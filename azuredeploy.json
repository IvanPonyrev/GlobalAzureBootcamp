{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Sas token to deployments container."
            },
            "defaultValue": null
        },
        "resourcesLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Sas token to resources container."
            },
            "defaultValue": null
        },
        "apiVersion": {
          "type": "string",
          "metadata": {
            "description": "The apiVersion of this resource."
          },
          "defaultValue": "[providers('Microsoft.Resources', 'deployments').apiVersions[0]]"
        },
        "applicationId": {
            "type": "string",
            "metadata": {
                "description": "The application id the connection will use."
            }
        },
        "vaultAdminId": {
            "type": "securestring",
            "metadata": {
                "description": "The object id to which vault admin access policies will be applied."
            }
        },
        "certificates": {
            "type": "secureObject",
            "metadata": {
                "description": "A secureObject containing array of certificates containing name, base64Value, and thumbprint."
            },
            "defaultValue": {
                "certificates": [ ]
            }
        },
        "secrets": {
            "type": "secureObject",
            "metadata": {
                "description": "A secureObject containing array of name value pairs."
            },
            "defaultValue": {
                "secrets": [ ]
            }
        },
        "runbooks": {
            "type": "array", 
            "metadata": {
                "description": "An object containing runbook basenames."
            },
            "defaultValue": [ ]
        },
        "runbooksStartTime": {
            "type": "string",
            "metadata": {
                "description": "The time to start the schedule."
            }
        },
        "modules": {
            "type": "array", 
            "metadata": {
                "description": "An object containing modules basenames."
            },
            "defaultValue": [ ]
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "managementResources",
            "resourceGroup": "management",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId(resourceGroup().name, 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'deployments/management.json', parameters('deploymentsLocationSasToken'))]"
                },
                "parameters": {
                    "deploymentsLocationSasToken": {
                        "value": "[parameters('deploymentsLocationSasToken')]"
                    },
                    "resourcesLocationSasToken": {
                        "value": "[parameters('resourcesLocationSasToken')]"
                    },
                    "applicationId": {
                        "value": "[parameters('applicationId')]"
                    },
                    "vaultAdminId": {
                        "value": "[parameters('vaultAdminId')]"
                    },
                    "certificates": {
                        "value": "[parameters('certificates')]"
                    },
                    "secrets": {
                        "value": "[parameters('secrets')]"
                    },
                    "runbooks": {
                        "value": "[parameters('runbooks')]"
                    },
                    "runbooksStartTime": {
                        "value": "[parameters('runbooksStartTime')]"
                    },
                    "modules": {
                        "value": "[parameters('modules')]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "appResources",
            "resourceGroup": "webapp",
            "dependsOn": [
                "[resourceId('management', 'Microsoft.Resources/deployments', 'managementResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId(resourceGroup().name, 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'deployments/webapp.json', parameters('deploymentsLocationSasToken'))]"
                },
                "parameters": {
                    "deploymentsLocationSasToken": {
                        "value": "[parameters('deploymentsLocationSasToken')]"
                    },
                    "resourcesLocationSasToken": {
                        "value": "[parameters('resourcesLocationSasToken')]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "ml",
            "resourceGroup": "ml",
            "dependsOn": [
                "[resourceId('management', 'Microsoft.Resources/deployments', 'managementResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId(resourceGroup().name, 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'deployments/machineLearning.json', parameters('deploymentsLocationSasToken'))]"
                },
                "parameters": {
                    "resourcesLocationSasToken": {
                        "value": "[parameters('resourcesLocationSasToken')]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "function",
            "resourceGroup": "functionapp",
            "dependsOn": [
                "[resourceId('management', 'Microsoft.Resources/deployments', 'managementResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId(resourceGroup().name, 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'deployments/machineLearning.json', parameters('deploymentsLocationSasToken'))]"
                },
                "parameters": {
                    "resourcesLocationSasToken": {
                        "value": "[parameters('resourcesLocationSasToken')]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        }
    ],
    "outputs": {
        "apiVersion": {
            "type": "string",
            "value": "[parameters('apiVersion')]"
        }
    }
}