{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcesLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Sas token to resources container."
            },
            "defaultValue": null
        },
        "apiVersion": {
          "type": "string",
          "metadata": {
            "description": "The apiVersion of this resource. Value 'latest' will deploy using latest apiVersion."
          },
          "defaultValue": "[providers('Microsoft.Resources', 'deployments').apiVersions[0]]"
        },
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name to be given to this automation account."
            }
        },
        "applicationId": {
            "type": "string",
            "metadata": {
                "description": "The application id the connection will use."
            }
        },
        "certificates": {
            "type": "secureObject", 
            "metadata": {
                "description": "A secureObject containing array of certificates objects containing name, base64Value, and thumbprint."
            }
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "[parameters('certificates').certificates[copyIndex()].name]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId(resourceGroup().name, 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'resources/certificates.json', parameters('resourcesLocationSasToken'))]"
                },
                "parameters": {
                    "name": {
                        "value": "[parameters('certificates').certificates[copyIndex()].name]"
                    },
                    "automationAccountName": {
                        "value": "[parameters('automationAccountName')]"
                    },
                    "base64Value": {
                        "value": "[parameters('certificates').certificates[copyIndex()].base64Value]"
                    },
                    "thumbprint": {
                        "value": "[parameters('certificates').certificates[copyIndex()].thumbprint]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            },
            "copy": {
                "name": "certificates",
                "count": "[length(parameters('certificates').certificates)]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "automationConnection",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'automationCertificate')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId(resourceGroup().name, 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'resources/connections.json', parameters('resourcesLocationSasToken'))]"
                },
                "parameters": {
                    "connectionName": {
                        "value": "automationConnection"
                    },
                    "automationAccountName": {
                        "value": "[parameters('automationAccountName')]"
                    },
                    "connectionType": {
                        "value": "AzureServicePrincipal"
                    },
                    "description": {
                        "value": "Automation account certificate for runbooks and configurations."
                    },
                    "fieldDefinitionValues": {
                        "value": {
                            "ApplicationId": "[parameters('applicationId')]",
                            "TenantId": "[subscription().tenantId]",
                            "CertificateThumbprint": "[reference(resourceId('Microsoft.Resources/deployments', 'automationCertificate'), parameters('apiVersion')).outputs.thumbprint.value]",
                            "SubscriptionId": "[subscription().subscriptionId]"
                        }
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        }
    ],
    "outputs": {
        "apiVersion": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'automationConnection'), parameters('apiVersion')).outputs.apiVersion.value]"
        },
        "name": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'automationConnection'), parameters('apiVersion')).outputs.name.value]"
        },
        "resourceId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'automationConnection'), parameters('apiVersion')).outputs.resourceId.value]"
        }
    }
}