{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcesLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Sas token to resources container."
            },
            "defaultValue": null
        },
        "apiVersion": {
            "type": "string",
            "metadata": {
                "description": "The apiVersion of this resource."
            },
            "defaultValue": "[providers('Microsoft.Resources', 'deployments').apiVersions[0]]"
        },
        "resourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The resourceGroup to which resources will be deployed."
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "name": {
            "type": "string",
            "metadata": {
                "description": "The name of this web site."
            },
            "defaultValue": "[concat('sql', uniqueString(resourceGroup().id))]"
        },
        "administratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The admin login."
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The admin login password."
            }
        },
        "edition": {
            "type": "string",
            "metadata": {
                "description": ""
            },
            "defaultValue": "Basic"
        },
        "collation": {
            "type": "string",
            "metadata": {
                "description": "The collation of the database."
            },
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
        },
        "maxSizeBytes": {
            "type": "string",
            "metadata": {
                "description": "The max size of the database expressed in bytes."
            },
            "defaultValue": "104857600"
        },
        "requestedServiceObjectiveName": {
            "type": "string",
            "metadata": {
                "description": "The name of the configured service level objective of the database."
            },
            "defaultValue": "Free"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "server",
            "resourceGroup": "[parameters('resourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId('management', 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'resources/servers.json', parameters('resourcesLocationSasToken'))]"
                },
                "parameters": {
                    "sqlServerName": {
                        "value": "[parameters('name')]"
                    },
                    "administratorLogin": {
                        "value": "[parameters('administratorLogin')]"
                    },
                    "administratorLoginPassword": {
                        "value": "[parameters('administratorLoginPassword')]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "auditingSettings",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'server')]"
            ],
            "resourceGroup": "[parameters('resourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId('management', 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'resources/auditingSettings.json', parameters('resourcesLocationSasToken'))]"
                },
                "parameters": {
                    "settingName": {
                        "value": "[concat(parameters('name'), '-audit')]"
                    },
                    "sqlServerName": {
                        "value": "[reference(resourceId(parameters('resourceGroup'), 'Microsoft.Resources/deployments', 'server'), parameters('apiVersion')).outputs.name.value]"
                    },
                    "storageAccountAccessKey": {
                        "reference": {
                            "keyVault": {
                                "id": "[reference(resourceId('management', 'Microsoft.Resources/deployments', 'vaults'), parameters('apiVersion')).outputs.resourceId.value]"
                            },
                            "secretName": "storagePrimaryKey"
                        }
                    },
                    "storageEndpoint": {
                        "value": "[concat(reference(resourceId('management', 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'audit-logs')]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "database",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'server')]"
            ],
            "resourceGroup": "[parameters('resourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId('management', 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'resources/databases.json', parameters('resourcesLocationSasToken'))]"
                },
                "parameters": {
                    "databaseName": {
                        "value": "[concat(parameters('name'), '-database')]"
                    },
                    "sqlServerName": {
                        "value": "[reference(resourceId(parameters('resourceGroup'), 'Microsoft.Resources/deployments', 'server'), parameters('apiVersion')).outputs.name.value]"
                    },
                    "edition": {
                        "value": "[parameters('edition')]"
                    },
                    "collation": {
                        "value": "[parameters('collation')]"
                    },
                    "maxSizeBytes": {
                        "value": "[parameters('maxSizeBytes')]"
                    },
                    "requestedServiceObjectiveName": {
                        "value": "[parameters('requestedServiceObjectiveName')]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "firewall",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'server')]"
            ],
            "resourceGroup": "[parameters('resourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId('management', 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'resources/firewallRules.json', parameters('resourcesLocationSasToken'))]"
                },
                "parameters": {
                    "sqlServerName": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'server'), parameters('apiVersion')).outputs.name.value]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        }
    ],
    "outputs": {
        "resourceId": {
            "type": "string",
            "value": "[reference(resourceId(parameters('resourceGroup'), 'Microsoft.Resources/deployments', 'server'), parameters('apiVersion')).outputs.resourceId.value]"
        },
        "fullyQualifiedDomainName": {
            "type": "string",
            "value": "[reference(resourceId(parameters('resourceGroup'), 'Microsoft.Resources/deployments', 'server'), parameters('apiVersion')).outputs.fullyQualifiedDomainName.value]"
        },
        "connectionString": {
          "type": "string",
          "value": "[concat('Server=tcp:', parameters('name'), ',1433;Initial Catalog=', concat(parameters('name'), '-database'), ';Persist Security Info=False; User ID=', parameters('administratorLogin') ,';Password=', parameters('administratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30')]"
        }
    }
}