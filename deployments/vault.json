{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcesLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Sas token to resources container."
            },
            "defaultValue": null
        },
        "apiVersion": {
            "type": "string",
            "metadata": {
                "description": "The Mirosoft.Resources deployments apiVersion."
            },
            "defaultValue": "[providers('Microsoft.Resources', 'deployments').apiVersions[0]]"
        },
        "vaultName": {
            "type": "string",
            "metadata": {
                "description": "The name of the vault."
            },
            "defaultValue": "[concat('vault', uniqueString(subscription().subscriptionId))]"
        },
        "secrets": {
            "type": "secureObject",
            "metadata": {
                "description": "Secrets to deploy to the vault."
            },
            "defaultValue": {
                "secrets": [ ]
            }
        },
        "vaultAdminId": {
            "type": "securestring",
            "metadata": {
                "description": "Vault administrator id."
            }
        },
        "resourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group to which resources will be provisioned."
            },
            "defaultValue": "management"
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "[parameters('vaultName')]",
            "resourceGroup": "[parameters('resourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId(resourceGroup().name, 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'resources/vaults.json', parameters('resourcesLocationSasToken'))]"
                },
                "parameters": {
                    "name": {
                        "value": "[parameters('vaultName')]"
                    },
                    "accessPolicies": {
                        "value": [
                            {
                                "tenantId": "[subscription().tenantId]",
                                "objectId": "[parameters('vaultAdminId')]",
                                "permissions": {
                                    "keys": [
                                        "all"
                                    ],
                                    "secrets": [
                                        "all"
                                    ],
                                    "certificates": [
                                        "all"
                                    ],
                                    "storage": [
                                        "all"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "[parameters('secrets').secrets[copyIndex()].name]",
            "resourceGroup": "[parameters('resourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(reference(resourceId(resourceGroup().name, 'Microsoft.Resources/deployments', 'storageAccounts'), parameters('apiVersion')).outputs.blobEndpoint.value, 'resources/secrets.json', parameters('resourcesLocationSasToken'))]"
                },
                "parameters": {
                    "secretName": {
                        "value": "[parameters('secrets').secrets[copyIndex()].name]"
                    },
                    "vaultName": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('vaultName')), parameters('apiVersion')).outputs.name.value]"
                    },
                    "value": {
                        "value": "[parameters('secrets').secrets[copyIndex()].value]"
                    }
                },
                "debugSetting": {
                    "detailLevel": "requestContent, responseContent"
                }
            },
            "copy": {
                "name": "secrets",
                "count": "[length(parameters('secrets').secrets)]"
            }
        }
    ],
    "outputs": {
        "name": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('vaultName')), parameters('apiVersion')).outputs.name.value]"
        },
        "apiVersion": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('vaultName')), parameters('apiVersion')).outputs.apiVersion.value]"
        },
        "resourceId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('vaultName')), parameters('apiVersion')).outputs.resourceId.value]"
        },
        "vaultUri": {
            "type": "securestring",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('vaultName')), parameters('apiVersion')).outputs.resourceId.value]"
        }
    }
}