{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vault": {
        "type": "object",
        "metadata": {
          "description": "Array of objects containing vault name and properties."
        }
      },
      "secrets": {
        "type": "array",
        "metadata": {
          "description": "Array of objects containing vault name and properties."
        }
      },
      "userObjectId": {
        "type": "string",
        "metadata": {
          "description": "The object id of user deploying these resources."
        }
      }
    },
    "variables": {
      "vaults": {
        "apiVersion": "[providers('Microsoft.KeyVault', 'vaults').apiVersions[0]]"
      }
    },
    "resources": [
      {
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "[variables('vaults').apiVersion]",
        "name": "[concat(parameters('vault').name, uniqueString(subscription().subscriptionId))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "sku": {
            "family": "A",
            "name": "standard"
          },
          "tenantId": "[subscription().tenantId]",
          "enabledForDeployment": true,
          "enabledForDiskEncryption": true,
          "enabledForTemplateDeployment": true,
          "copy": [
            {
              "name": "accessPolicies",
              "count": "[length(parameters('vault').properties.accessPolicies)]",
              "input": {
                "objectId": "[if(greater(length(parameters('vault').properties.accessPolicies[copyIndex('accessPolicies')].objectId), 0), parameters('vault').properties.accessPolicies[copyIndex('accessPolicies')].objectId, parameters('userObjectId'))]",
                "tenantId": "[subscription().tenantId]",
                "permissions": "[parameters('vault').properties.accessPolicies[copyIndex('accessPolicies')].permissions]"
              }
            }
          ]
        }
      }
    ],
    "outputs": {
      "vaultUri": {
        "type": "string",
        "value": "[reference(concat(parameters('vault').name, uniqueString(subscription().subscriptionId)), variables('vaults').apiVersion).vaultUri]"
      }
    }
  }
  